apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: plex
  namespace: mediaserver
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: plex
  serviceName: "plex"
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: plex
    spec:
      containers:
      - name: plex
        image: docker.io/plexinc/pms-docker:plexpass
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 32400
          name: http-32400
        env:
        - name: TZ
          value: America/Detroit
        - name: VERSION
          value: docker
        - name: PLEX_UID
          value: "911"
        - name: PLEX_GID
          value: "911"
        - name: PLEX_CLAIM
          value: claim-sLPQHyQbVe5g8yGv4Nf-
#        - name: ADVERITSE_IP
#          value: https://0.0.0.0:32400
        volumeMounts:
        - name: config
          mountPath: "/config"
#        - name: remote
#          mountPath: "/media/remote"
        - name: local
          mountPath: "/media/local"
        - name: transcode
          mountPath: "/transcode"
        resources:
          requests:
            memory: "2Gi"
            cpu: "2000m"
          limits:
            memory: "4Gi"
            cpu: "6000m"
            gpu.intel.com/i915: 1
        readinessProbe:                # Check that the http server is responding to ensure the container is up
          tcpSocket:
            port: 32400
        livelinessProbe:               # Check that the http server is responding to ensure the container is up
          tcpSocket:
            port: 32400
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: plex-config
      - name: transcode
        emptyDir: 
          sizeLimit: 128Gi
      - name: local
        nfs:
          path: /mnt/pool0/media
          server: truenas.farhoodliquor.dmz
#      - name: local
#        persistentVolumeClaim:
#          claimName: mediaserver-local
#      - name: remote
#        persistentVolumeClaim:
#          claimName: mediaserver-remote
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
