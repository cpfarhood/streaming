## StatefulSet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zurg
  labels:
    app: zurg
  annotations:
    polaris.fairwinds.com/tagNotSpecified-exempt: true  # Latest tag is desired here
spec:
  selector:
    matchLabels:
      app: zurg
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
           matchExpressions:
            - key: <label-key>
              operator: In
              values:
              - <label-value>
          topologyKey: kubernetes.io/hostname
  serviceName: "zurg"
  replicas: 2
  template:
    metadata:
      labels:
        app: zurg
    spec:
      containers:
      - name: zurg
        image: ghcr.io/debridmediamanager/zurg-testing:latest
        ports:
        - name: zurg-http
          containerPort: 9999
        volumeMounts:
        - name: data
          mountPath: "/app/data"
        - name: config
          mountPath: /app/config.yml
          subPath: config.yml
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          runasNonRoot: true
        startupProbe:
          httpGet:
            path: /http/__unplayable__/ubuntu-24.04.1-live-server-amd64.iso/
            port: zurg-http
          initialDelaySeconds: 60
          periodSeconds: 60
          failureThreshold: 30      # depending on how much content you have the pod can take a long time to reach ready
        livenessProbe:                # Check that the http server is responding to ensure the container is up
          httpGet:
            path: /
            port: zurg-http
        readinessProbe:                 # Check that the chose torrent is available to ensure the container is serving data
          httpGet:
            path: /http/__unplayable__/ubuntu-24.04.1-live-server-amd64.iso/
            port: zurg-http
          initialDelaySeconds: 15
          periodSeconds: 5
          failureThreshold: 3      # depending on how much content you have the pod can take a long time to reach ready      volumes:
      volumes:
      - name: config
        secret:
          secretName: zurg-config
          items:
          - key: config.yml
            path: config.yml
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn-perpetual
      resources:
        requests:
          storage: 8Gi
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: zurg
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: zurg
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 60